#!/usr/bin/python3

black = '30'
red = '31'
green = '32'
yellow = '33'
blue = '34'
purple = '35'
cyan = '36'
white = '37'

def color(c, text, bright=0):
	return '\033[{b};{c}m'.replace(
		'{b}', str(bright)
	).replace(
		'{c}', c
	) + text + '\033[0;37m'

import sys

try:
	flag = sys.argv[1]
except Exception:
	h = color(blue,'hex - ', 1)
	e = color(purple,'hex',1)
	d = color(red,'-d')
	f = color(red,'-f')
	print( h + '\tPlease %s numbers as an input, \n\tdecimal numbers preceded by the %s flag, \n\tor a file preceeded by the %s flag' %(e, d, f))
	exit()

def readvalues(): # https://duckduckgo.com/?t=lm&q=python+pass+lambda+argument&ia=web
	if sys.argv[1] == '-d': 
		sys.argv.pop(1)
		h = color(blue, 'hex - ', 1)
		a = color(green, ' '.join(sys.argv[1:]))
		print( h + '\t' + a)
		func = lambda x: '%02x' % int(x) 
	else:
		h = color(blue, 'hex - ', 1)
		a = color(yellow, ' '.join(sys.argv[1:]), 1)
		print( h + '\t' + a)
		func = lambda x: '%s' % int(x,16)
		
	result = ''
	for argument in range(1, len(sys.argv)):
		try:
			result += func(sys.argv[argument]) +' '
		except:
			result += color(red, sys.argv[argument]) +' '
		else:
			pass
	
	print('\t'+result)
	
# returns the modified array and the sub-array
def consume(array, amount):
	if amount < len(array):
		result = array[0:amount+1]
		return array[amount+1:], result
	else:
		return [], array
	
def readfile():
	try:
		FILE = open(filename, 'rb')
	except Exception:
		print(color(red,'\tError: ')+ 'file not found in directory')
		exit()
	CONTENT = FILE.read()

	position = 0
	while len(CONTENT) > 0:
		state = consume(CONTENT, 16)
		CONTENT = state[0]
		LINE = state[1]

		print( color(green, '\t%08x' % position), end='\t' )
		for BYTE in LINE:
			print('%02x'%BYTE, end=' ')
		print()
		position +=16
	print()
	
try:
	filename = sys.argv[2]
except Exception:
	readvalues()	
else:
	if sys.argv[1] == '-f':
		h = color(blue, 'hex - ', 1)
		f = color(yellow, filename, 1)
		print( h + '\t' + f)
		readfile()
	else:
		readvalues()
